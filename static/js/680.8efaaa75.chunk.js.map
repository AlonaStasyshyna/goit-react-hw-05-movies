{"version":3,"file":"static/js/680.8efaaa75.chunk.js","mappings":"kNAGaA,EAAOC,EAAAA,GAAAA,GAAH,6HAQJC,GAAYD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,4C,SCPTG,EAAa,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,OAC/BC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,gCACGH,IAAY,wBAAKA,KAElB,SAACL,EAAD,UACGM,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACV,yBACE,SAACT,EAAD,CAAWU,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMP,GAA/C,SACGI,KAFID,EADC,QAUnB,C,8ICtBYK,EAAS,SAAAT,GAAM,OAC1BA,EAAOG,KAAI,kBAAyC,CAAEC,GAA3C,EAAGA,GAA4CC,MAA/C,EAAOA,MAA+CK,OAAtD,EAAcC,YAAd,GADe,ECGtBC,EAAU,mCAChBC,EAAAA,GAAAA,SAAAA,QAAyB,+BAElB,IAAMC,EAAmB,mCAAG,uGACVD,EAAAA,EAAAA,IAAM,sBAAuB,CAClDE,OAAQ,CAAEH,QAAAA,KAFqB,uBACzBI,EADyB,EACzBA,KADyB,kBAK1BP,EAAOO,EAAKC,UALc,2CAAH,qDAQnBC,EAAgB,mCAAG,WAAMC,GAAN,0FACPN,EAAAA,EAAAA,IAAM,gBAAiB,CAC5CE,OAAQ,CAAEH,QAAAA,EAASO,MAAAA,KAFS,uBACtBH,EADsB,EACtBA,KADsB,kBAKvBP,EAAOO,EAAKC,UALW,2CAAH,sDAQhBG,EAAc,mCAAG,WAAOhB,EAAIiB,GAAX,wFACTR,EAAAA,EAAAA,IAAM,UAAD,OAAWT,GAAX,OAAgBiB,GAAa,CACnDN,OAAQ,CAAEH,QAAAA,KAFgB,cACtBU,EADsB,yBAKrBA,EAAKN,MALgB,2CAAH,uD,uFCM3B,UAvBiB,WACf,OAA4BO,EAAAA,EAAAA,UAAS,IAArC,eAAOvB,EAAP,KAAewB,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,IAEbZ,EAAAA,EAAAA,MACGgB,KAAKN,GACLO,MAAMH,GACNI,QAAQN,GAAa,GACzB,GAAE,KAGD,gCACGD,IAAa,SAAC,IAAD,IACbzB,IAAU,SAAC,IAAD,CAAYD,SAAS,iBAAiBC,OAAQA,IACxD2B,IAAS,0DAGf,C","sources":["components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","utils/mapper.js","fetchApi/fetchApi.js","pages/HomePage/HomePage.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n  margin-top: 10px;\n  margin-left: 20px;\n`;\n\nexport const MovieLink = styled(Link)`\n  color: darkblue;\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, MovieLink } from './MoviesList.styled';\n\nexport const MoviesList = ({ listName, movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {listName && <h1>{listName}</h1>}\n\n      <List>\n        {movies.map(({ id, title }) => (\n          <li key={id}>\n            <MovieLink to={`/movies/${id}`} state={{ from: location }}>\n              {title}\n            </MovieLink>\n          </li>\n        ))}\n      </List>\n    </>\n  );\n};\n\nMoviesList.propTypes = {\n  listName: PropTypes.string,\n  movies: PropTypes.array.isRequired,\n};\n","export const mapper = movies =>\n  movies.map(({ id, title, poster_path: poster }) => ({ id, title, poster }));\n","import axios from 'axios';\nimport { mapper } from 'utils/mapper';\n\nconst api_key = 'f2adf6f643aa7936267884505488a932';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\n\nexport const fetchTrendingMovies = async () => {\n  const { data } = await axios('/trending/movie/day', {\n    params: { api_key },\n  });\n\n  return mapper(data.results);\n};\n\nexport const fetchSearchMovie = async query => {\n  const { data } = await axios('/search/movie', {\n    params: { api_key, query },\n  });\n\n  return mapper(data.results);\n};\n\nexport const fetchMovieById = async (id, paramName) => {\n  const resp = await axios(`/movie/${id}${paramName}`, {\n    params: { api_key },\n  });\n\n  return resp.data;\n};\n","import { useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from 'fetchApi/fetchApi';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    fetchTrendingMovies()\n      .then(setMovies)\n      .catch(setError)\n      .finally(setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {movies && <MoviesList listName=\"Trending today\" movies={movies} />}\n      {error && <p>Ooops! Something went wrong.</p>}\n    </>\n  );\n};\n\nexport default HomePage;\n"],"names":["List","styled","MovieLink","Link","MoviesList","listName","movies","location","useLocation","map","id","title","to","state","from","mapper","poster","poster_path","api_key","axios","fetchTrendingMovies","params","data","results","fetchSearchMovie","query","fetchMovieById","paramName","resp","useState","setMovies","isLoading","setIsLoading","error","setError","useEffect","then","catch","finally"],"sourceRoot":""}